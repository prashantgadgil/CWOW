<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[/*function (snRecordWatcher, $scope, spUtil, $rootScope, $timeout) {
	$scope.loadingIndicator = $rootScope.loadingIndicator;
	$scope.cartItemCount = 0;
	$scope.itemAddedTooltipOpen = false;

	$scope.$on("$sp.service_catalog.cart.count", function($evt, count) {
		$scope.cartItemCount = count;
	});

	var cancelTooltipPromise;
	$scope.$on("$sp.service_catalog.cart.add_item", function() {
		$timeout.cancel(cancelTooltipPromise);

		$scope.itemAddedTooltipOpen = true;
		cancelTooltipPromise = $timeout(function() {
			$scope.itemAddedTooltipOpen = false;
		}, 3000);
	});

	$scope.$on('sp_loading_indicator', function(e, value) {
		$scope.loadingIndicator = value;
	});

	$scope.toggleCart = function() {
		$timeout.cancel(cancelTooltipPromise);
		$scope.itemAddedTooltipOpen = false;
		$timeout(function() {
			$("#cart-dropdown").dropdown("toggle");
		});
	}

	// Get list of record watchers
	var record_watchers = [];
	if ($scope.data.menu.items) {
		for(var i in $scope.data.menu.items) {
			var item = $scope.data.menu.items[i];
			if (item.type == 'scripted') {
				if (item.scriptedItems.record_watchers)
					record_watchers = record_watchers.concat(item.scriptedItems.record_watchers);
			}
			if (item.type == 'filtered') {
				record_watchers.push({'table':item.table,'filter':item.filter});
			}
		}
	}

	// Init record watchers
	for (var y in record_watchers){
		var watcher = record_watchers[y];
		//console.info('Record Watcher: '+watcher.table+' : '+watcher.filter);
		snRecordWatcher.initList(watcher.table, watcher.filter);
	}

	$scope.$on("record.updated", function(evt) {
		spUtil.update($scope);
	});

}
*/]]></client_script>
        <controller_as>c</controller_as>
        <css>.header-loader {
	float: left;
  	width: 24px;
  	position: relative;
  	top: 24px;
}

.cart-dropdown {
  width: 350px;
  padding: 0;
  border-top-left-radius: 4px !important;
  border-top-right-radius: 4px !important;

  ul {
    max-height: 300px;
    overflow: auto;
  }

  .subtotal {
    display: block;
  }

  .item-image {
    padding: 0;
    margin: 0;
    text-align: center;
    max-width:100%;
    height:auto;
  }
  label, p {
    padding: 0;
    margin: 0;
  }
  .media {
    padding: 0;
    margin: 0;
  }
  .media-left &gt; a {
    display: block;
    width: 48px;
    max-width: 48px;
  }
  .media-body {
    label {
      font-weight: bold;
    }
  }
  li.media {
    border-top: 1px solid #cccccc;
    padding: 1rem;
  }
  .panel {
    margin: 0;
  }
  .panel .panel-body {
    padding: 0;
  }
  .btn-clear {
		color: #333;
    background-color: #fff;
  }
  p.quantity-price {
    padding-top: 0.5rem;
    span {
      color: #777;
      padding-right: 0.5rem;
    }
  }
  .align-right {
  	text-align: right;
  }
}



.item-added-tooltip {
  width: 184px;
  font-size: 14px;
}</css>
        <data_table>sp_instance_menu</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title</field_list>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link/>
        <name>CWOW Menu</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[/*
(function(){
	// build menus
	var menu_id = $sp.getValue('sys_id'); // instance sys_id
	var gr = new GlideRecord('sp_instance_menu');
	gr.get(menu_id);
	data.menu = {};
	data.menu.name = gr.name.getDisplayValue();
	data.menu.items = $sp.getMenuItems(menu_id);

	data.isLoggedIn = GlideSession.get().isLoggedIn();
	if (data.isLoggedIn)
		data.cartWidget = $sp.getWidget("sc-shopping-cart", {cartTemplate: "small_shopping_cart.html"});
})();
*/]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-09-14 03:56:44</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>bb1a6fbfdb458700e6a0d5f0cf9619d9</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>CWOW Menu</sys_name>
        <sys_package display_value="CWOW - Clinic Without Walls" source="x_bp3g_cwow">a75ee1badb410700e6a0d5f0cf96194a</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="CWOW - Clinic Without Walls">a75ee1badb410700e6a0d5f0cf96194a</sys_scope>
        <sys_update_name>sp_widget_bb1a6fbfdb458700e6a0d5f0cf9619d9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-09-14 04:17:32</sys_updated_on>
        <template><![CDATA[<ul class="nav navbar-nav">
  <li>
    <div class="header-loader">Facilties</div>
  </li><br/>
  <li>
    <div class="header-loader">Patients</div>
  </li>
</ul>
]]></template>
    </sp_widget>
</record_update>
